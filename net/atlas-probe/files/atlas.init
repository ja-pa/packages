#!/bin/sh /etc/rc.common

USE_PROCD=1
START=30
EXTRA_COMMANDS="get_key probeid log"
EXTRA_HELP="	get_key	print probe public key (used for probe registration)
	probeid	print probe id
	log print probe status log
"

SCRIPTS_DIR="/usr/libexec/atlas-probe-scripts"
TMP_BASE_DIR="/tmp/ripe_atlas_probe"
PUB_KEY_FILE="$SCRIPTS_DIR/etc/probe_key.pub"
PROBE_ID_FILE="$TMP_BASE_DIR/status/reg_init_reply.txt"
LOG_FILE="/tmp/log/ripe_sw_probe"
STATE_CONFIG="$SCRIPTS_DIR/state/config.txt"

log() {
	if [ -f "$LOG_FILE" ];then
		tail "$LOG_FILE"
	else
		print_msg "Error. No log file found. Probe isn't probably running"
		exit 1
	fi
}

get_key() {
	if [ -f "$PUB_KEY_FILE" ]; then
		echo "Probe public key (use for registration)"
		echo "=========================================="
		cat "$PUB_KEY_FILE"
	else
		print_msg "Error! Pub. key not found"
		exit 1
	fi
}

probeid() {
	if [ -f "$PROBE_ID_FILE" ]; then
		probe_id="$(cat "$PROBE_ID_FILE" |grep "PROBE_ID"|awk '{print $2}')"
		if [ -z "$probe_id" ]; then
			print_msg "Probe ID not found SW probe isn't probably registered yet"
			exit 1
		else
			print_msg "Probe ID is $probe_id"
		fi
	else
		print_msg "Probe ID not found. SW probe is not running or probe_key isn't registered yet"
		exit 1
	fi
}

print_msg() {
	echo "$1" >&2
	logger -t atlas-sw-probe "$1"
}

stop_service() {

	print_msg "Stopping atlas sw probe"
	run_pids="$(ls -1 $SCRIPTS_DIR/run/*.vol 2>/dev/null | wc -l)"
	if [ "$run_pids" != "0" ]; then
		print_msg "Kill all atlas processes"
		kill "$(cat $SCRIPTS_DIR/run/*.vol)"
	fi

	if [ -f "$SCRIPTS_DIR/status/con_keep_pid.vol" ]; then
		print_msg "Kill ssh tunnel"
		kill "$(cat $SCRIPTS_DIR/status/con_keep_pid.vol)"
	fi
}

safe_mkdir() {
    local dir="$1"
    if [ -e "$dir" ] && [ ! -d "$dir" -o -L "$dir" ]; then
        rm -rf "$dir"
    fi
    mkdir -p "$dir"
    chmod 700 "$dir"
    chown root:root "$dir"
}

create_tmp_dirs() {
	local dirs

	chown -R atlas:atlas "$SCRIPTS_DIR/bin"
	chmod 755 "$SCRIPTS_DIR/bin"
	dirs='crons data run status'

	safe_mkdir "$TMP_BASE_DIR"
	for i in $dirs;	do
		safe_mkdir "$TMP_BASE_DIR/$i"
	done
}

start_service() {
	local log_stderr
	local log_stdout
	local rxtxrpt
	local test_setting

	create_tmp_dirs

	config_load atlas
	config_get_bool log_stderr "common" log_stderr "0"
	config_get_bool log_stdout "common" log_stdout "0"
	config_get_bool rxtxrpt "common" rxtxrpt "1"
	test_setting=$(grep "^[ 	]*RXTXRPT=yes" "$STATE_CONFIG")

	# Decide if we should write to permanent storage
	if [ "$rxtxrpt" == "1" ] &&  [ -z "$test_setting" ]; then
		echo "RXTXRPT=yes">$STATE_CONFIG
	elif [ "$rxtxrpt" == "0" ] &&  [ ! -z "$test_setting" ]; then
		echo "RXTXRPT=no">$STATE_CONFIG
	fi

	procd_open_instance
	procd_set_param command "$SCRIPTS_DIR/bin/ATLAS"
	procd_set_param stdout "$log_stdout"
	procd_set_param stderr "$log_stderr"
	procd_close_instance
}
